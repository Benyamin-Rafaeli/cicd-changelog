AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cicd-changelog

  SAM Template setting up a webhook that integrates with JIRA to save changelog details and returns a list of changes

Parameters:
  TableName:
    Type: String
    Default: changelog
  S3BucketName:
    Type: String
    Default: REPLACEME

Globals:
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'x-api-key,Content-Type'"
      AllowOrigin: "'*'"

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      TracingEnabled: true
      StageName: dev
      DefinitionBody:
        'Fn::Transform':
          Name: AWS::Include
          Parameters:
            Location: !Join [ '', [ 's3://', !Ref S3BucketName, '/openapi-spec.yaml' ] ]

  AddChangelogDetailRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: AddChangelogDetailPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: !GetAtt ChangelogTable.Arn

  GetChangelogDetailsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: GetChangelogDetailsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                Resource: !GetAtt ChangelogTable.Arn


  ChangelogTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Enabled: true
      StageKeys:
        - RestApiId: !Ref Api
          StageName: dev

  UsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      ApiStages:
        - ApiId: !Ref Api
          Stage: dev

  UsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref UsagePlan

Outputs:
  APIEndpoint:
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/dev"
